#!/bin/bash
# voidnsrun setup script

repokeys_dir="/var/db/xbps/keys"

function determine_arch {
    arch=$(xbps-uhelper arch)
    if [ "$arch" = "x86_64-musl" ]; then
        target_arch=x86_64
    elif [ "$arch" = "x86_64" ]; then
        target_arch=x86_64-musl
    fi
}

# Get Void main mirror in use and adapt it to use $container_type instead of musl.
function get_target_repo {
    # Determine if a different mirror than default is configured, and if it's correct, use it instead of default.
    if [ ! -d /etc/xbps.d/00-repository-main.conf ]; then
        mainrepofile="/usr/share/xbps.d/00-repository-main.conf"
    else
        mainrepofile="/etc/xbps.d/00-repository-main.conf"
    fi

    # Print target_arch Void repository
    if [ "$target_arch" = "x86_64" ]; then
        cat $mainrepofile | cut -d"=" -f2 | sed 's|/musl||g'
    elif [ "$target_arch" = "x86_64-musl" ]; then
        cat $mainrepofile | cut -d"=" -f2 | sed -e 's|$|/musl|'
    fi
}

# Get Cereus main mirror in use and adapt it to use x86_64 instead of x86_64-musl
function get_cereus_repo {
    # Determine if a different mirror than default is configured, and if it's correct, use it instead of default.
    if [ ! -d "/etc/xbps.d/10-cereus-*" ]; then
        extra_file="/usr/share/xbps.d/10-cereus-extra.conf"
        core_file="/usr/share/xbps.d/10-cereus-core.conf"
    else
        extra_file="/etc/xbps.d/10-cereus-extra.conf"
        core_file="/etc/xbps.d/10-cereus-core.conf"
    fi

    # Print target_arch cereus-extra repository
    if [ "$target_arch" = "x86_64" ]; then
        cereus_extra=$(cat $extra_file | cut -d"=" -f2 | sed 's|x86_64-musl|x86_64|g')
    elif [ "$target_arch" = "x86_64-musl" ]; then
        cereus_extra=$(cat $extra_file | cut -d"=" -f2 | sed 's|x86_64|x86_64-musl|g')
    fi

    # Print target_arch cereus-core repository
    if [ "$target_arch" = "x86_64" ]; then
        cereus_core=$(cat $core_file | cut -d"=" -f2 | sed 's|x86_64-musl|x86_64|g')
    elif [ "$target_arch" = "x86_64-musl" ]; then
        cereus_core=$(cat $core_file | cut -d"=" -f2 | sed 's|x86_64|x86_64-musl|g')
    fi

}

function determine_container {
    if [ "$target_arch" = "x86_64" ]; then
        container_type="glibc"
    elif [ "$target_arch" = "x86_64-musl" ]; then
        container_type="musl"
    fi
    }

function strap_package {
    cat /etc/os-release | grep cereus >/dev/null
    exitstatus2=$?

    if [ $exitstatus2 = 0 ]; then
        echo "base-cereustrap"
    else
        echo "base-voidstrap"
    fi
}

# Check if strap_package is installed on $container_type container
function checkstrap {
    xbps-query -r /$container_type -m | grep $(strap_package)
    exitstatus=$?

    if [ $exitstatus = 0 ]; then
        strapinstalled=1
    else
        strapinstalled=0
    fi
}


# Create the base container
function create_container {
    XBPS_ARCH=$target_arch xbps-install --repository=$(get_target_repo) --repository=$cereus_core --repository=$cereus_extra -r /$container_type -Sy $(strap_package)
}

# Checks if container path exists, and if it has installed the strap package.
# Otherwise, it will create the path and configure the container.

# The first thing to do is determine which arch is the target
determine_arch
determine_container
container_path="/$container_type"


# Then determine which Cereus repo use
get_cereus_repo

if [ ! -d "/$container_type" ]; then
    echo "
==> Creating container path"

    mkdir -p /$container_type/${repokeys_dir}
    echo "==> Copying repositories keys...
"
    cp ${repokeys_dir}/*.plist /$container_type/${repokeys_dir}/
    echo "==> Creating $container_type container, this will take a bit...
"
    create_container
else
    checkstrap
    if [ $strapinstalled = 0 ]; then
    echo "==> Copying repositories keys...
"
    mkdir -p /$container_type/${repokeys_dir}
    cp ${repokeys_dir}/*.plist /$container_type/${repokeys_dir}/
    echo "==> Creating $container_type container, this will take a bit...
"
        create_container
    fi
fi

echo "==> Configuring extra repository and voidnsundo
"
echo $container_path
# Please note that, if the host is x86_64 or some reason, there is a bug that will cause '-' flags don't work.

if [ "$target_arch" = "x86_64-musl" ]; then
    xchroot $container_path xbps-install -Syf --repository=$cereus_extra voidnsundo cereus-repo-extra
else
    xchroot $container_path xbps-install -Syf --repository=$cereus_extra voidnsundo cereus-repo-extra
fi

# If the host machine is running Cereus Linux, then also add the cereus-core repository
if [ "$exitstatus2" = 0 ]; then
    xchroot $container_path xbps-install -Syf --repository=$cereus_core cereus-repo-core
fi
